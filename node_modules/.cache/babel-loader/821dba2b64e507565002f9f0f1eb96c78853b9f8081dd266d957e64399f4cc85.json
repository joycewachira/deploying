{"ast":null,"code":"var _jsxFileName = \"/home/joyce/bb/bb/src/Components/BotCollection.js\";\n// import React, {useEffect , useState} from 'react';\n// // import BotCard from './BotCard'; \n\n// const BotCollection = ({onEnlistBot}) => {\n\n//   const [bots , setBots] = useState([]);\n\n//     useEffect(()=>{\n//       fetch('https://bot-data-yjzx.onrender.com/bots')\n//         .then((response) => response.json())\n//         .then((data)=> setBots(data))\n//     }, []);\n\n//     return (\n//       <div>\n//         <h2>Bot Collection</h2>\n//         <div >\n//           {bots.map((bot) => (\n//             <div>\n//               <div className=\"border border-gray-300 rounded-lg p-4 mb-4\">\n//                 <img src={bot.avatar_url} alt={`Avatar of ${bot.name}`} className=\"w-24 h-24 mx-auto mb-4\" />\n//                 <h2 className=\"text-xl font-semibold\">{bot.name}</h2>\n//                 <p className=\"text-gray-500\">Class: {bot.bot_class}</p>\n//                 <p className=\"text-gray-500\">Health: {bot.health}</p>\n//                 <p className=\"text-gray-500\">Damage: {bot.damage}</p>\n//                 <p className=\"text-gray-500\">Armor: {bot.armor}</p>\n//                 <p className=\"text-gray-500\">Catchphrase: {bot.catchphrase}</p> \n\n//                 <button\n//                     className=\"bg-blue-500 text-white font-semibold py-2 px-4 rounded mt-4 mr-2\"\n//                     onClick={() => onEnlistBot(bot)}\n//                 >\n//                     Enlist\n//                 </button>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n//     )\n// }\n\n//             {/* Render the enlist button if the bot is not enlisted\n//             {!enlisted && (\n//                 <button\n//                     className=\"bg-blue-500 text-white font-semibold py-2 px-4 rounded mt-4 mr-2\"\n//                     onClick={handleEnlistClick}\n//                 >\n//                     Enlist\n//                 </button>\n//             )}\n\n//             {/* Render the release button if the bot is enlisted */}\n//             {/* {enlisted && (\n//                 <button\n//                     className=\"bg-red-500 text-white font-semibold py-2 px-4 rounded mt-4\"\n//                     onClick={handleReleaseClick}\n//                 >\n//                     Release\n//                 </button> */}\n\n//   export default BotCollection;\n\n//   // className=\"text-2xl font-semibold mb-4\"\n//   //className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\"\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotCollection = ({\n  botbots,\n  onEnlistBot\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Bot Collection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: bots.map(bot => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border border-gray-300 rounded-lg p-4 mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: bot.avatar_url,\n            alt: `Avatar of ${bot.name}`,\n            className: \"w-24 h-24 mx-auto mb-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold\",\n            children: bot.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500\",\n            children: [\"Class: \", bot.bot_class]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500\",\n            children: [\"Health: \", bot.health]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500\",\n            children: [\"Damage: \", bot.damage]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500\",\n            children: [\"Armor: \", bot.armor]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500\",\n            children: [\"Catchphrase: \", bot.catchphrase]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), !botArmy.some(enlistedBot => enlistedBot.id === bot.id) ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-blue-500 text-white font-semibold py-2 px-4 rounded mt-4 mr-2\",\n            onClick: () => onEnlistBot(bot),\n            children: \"Enlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-red-500 text-white font-semibold py-2 px-4 rounded mt-4\",\n            onClick: () => {},\n            disabled: true,\n            children: \"Enlisted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, bot.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_c = BotCollection;\nexport default BotCollection;\nvar _c;\n$RefreshReg$(_c, \"BotCollection\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","BotCollection","botbots","onEnlistBot","children","fileName","_jsxFileName","lineNumber","columnNumber","bots","map","bot","className","src","avatar_url","alt","name","bot_class","health","damage","armor","catchphrase","botArmy","some","enlistedBot","id","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/joyce/bb/bb/src/Components/BotCollection.js"],"sourcesContent":["// import React, {useEffect , useState} from 'react';\n// // import BotCard from './BotCard'; \n\n\n// const BotCollection = ({onEnlistBot}) => {\n\n//   const [bots , setBots] = useState([]);\n  \n\n//     useEffect(()=>{\n//       fetch('https://bot-data-yjzx.onrender.com/bots')\n//         .then((response) => response.json())\n//         .then((data)=> setBots(data))\n//     }, []);\n    \n\n//     return (\n//       <div>\n//         <h2>Bot Collection</h2>\n//         <div >\n//           {bots.map((bot) => (\n//             <div>\n//               <div className=\"border border-gray-300 rounded-lg p-4 mb-4\">\n//                 <img src={bot.avatar_url} alt={`Avatar of ${bot.name}`} className=\"w-24 h-24 mx-auto mb-4\" />\n//                 <h2 className=\"text-xl font-semibold\">{bot.name}</h2>\n//                 <p className=\"text-gray-500\">Class: {bot.bot_class}</p>\n//                 <p className=\"text-gray-500\">Health: {bot.health}</p>\n//                 <p className=\"text-gray-500\">Damage: {bot.damage}</p>\n//                 <p className=\"text-gray-500\">Armor: {bot.armor}</p>\n//                 <p className=\"text-gray-500\">Catchphrase: {bot.catchphrase}</p> \n\n//                 <button\n//                     className=\"bg-blue-500 text-white font-semibold py-2 px-4 rounded mt-4 mr-2\"\n//                     onClick={() => onEnlistBot(bot)}\n//                 >\n//                     Enlist\n//                 </button>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n//     )\n// }\n\n\n//             {/* Render the enlist button if the bot is not enlisted\n//             {!enlisted && (\n//                 <button\n//                     className=\"bg-blue-500 text-white font-semibold py-2 px-4 rounded mt-4 mr-2\"\n//                     onClick={handleEnlistClick}\n//                 >\n//                     Enlist\n//                 </button>\n//             )}\n\n//             {/* Render the release button if the bot is enlisted */}\n//             {/* {enlisted && (\n//                 <button\n//                     className=\"bg-red-500 text-white font-semibold py-2 px-4 rounded mt-4\"\n//                     onClick={handleReleaseClick}\n//                 >\n//                     Release\n//                 </button> */}\n\n  \n//   export default BotCollection;\n  \n\n//   // className=\"text-2xl font-semibold mb-4\"\n//   //className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\"\n\nimport React from 'react';\n\nconst BotCollection = ({ botbots, onEnlistBot }) => {\n  return (\n    <div>\n      <h2>Bot Collection</h2>\n      <div>\n        {bots.map((bot) => (\n          <div key={bot.id}>\n            <div className=\"border border-gray-300 rounded-lg p-4 mb-4\">\n              <img\n                src={bot.avatar_url}\n                alt={`Avatar of ${bot.name}`}\n                className=\"w-24 h-24 mx-auto mb-4\"\n              />\n              <h2 className=\"text-xl font-semibold\">{bot.name}</h2>\n              <p className=\"text-gray-500\">Class: {bot.bot_class}</p>\n              <p className=\"text-gray-500\">Health: {bot.health}</p>\n              <p className=\"text-gray-500\">Damage: {bot.damage}</p>\n              <p className=\"text-gray-500\">Armor: {bot.armor}</p>\n              <p className=\"text-gray-500\">Catchphrase: {bot.catchphrase}</p>\n\n              {!botArmy.some((enlistedBot) => enlistedBot.id === bot.id) ? (\n                <button\n                  className=\"bg-blue-500 text-white font-semibold py-2 px-4 rounded mt-4 mr-2\"\n                  onClick={() => onEnlistBot(bot)}\n                >\n                  Enlist\n                </button>\n              ) : (\n                <button\n                  className=\"bg-red-500 text-white font-semibold py-2 px-4 rounded mt-4\"\n                  onClick={() => {}}\n                  disabled\n                >\n                  Enlisted\n                </button>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default BotCollection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}